extends ../layout

block content
  .tab-bar
    ul.nav.nav-tabs
      li
        a.border-link(href='/shop') 
          | #{ __('your-shop') }
      li.active
        a.border-link(href='/shop/edit')
          | #{ __('edit-your-shop') } 

  .content-container.content-border-left
    if typeof msg !== 'undefined'
      .row
        .alert.alert-error.shop-edit-alert
          button.close(type='button', data-dismiss='alert') x
          for message in msg.messages
            p=message

    .row
      form.form-horizontal.edit-shop-form(action='/shop/edit', method='POST', enctype='multipart/form-data')
        fieldset
          legend #{ __('form-shop-detail') }
          .control-group
            label.control-label(for='avatar') #{ __('shop-avatar') }
            .controls
              .fileupload.fileupload-new(data-provides='fileupload')
                .fileupload-new.thumbnail.align-image
                  img.span4(src='/images/#{ shop.avatar }')
                .fileupload-preview.fileupload-exists.thumbnail.uploaded-image
                .image-buttons
                  span.btn.btn-file
                    span.fileupload-new #{ __('choose-image') }
                    span.fileupload-exists #{ __('Change') }
                    input(type='file', name='avatar')

                  a.btn.fileupload-exists(href='#', data-dismiss='fileupload') #{ __('Remove') }

          .control-group
            label.control-label(for='shopName') #{ __('shop-name') }
            .controls
              input.input-xlarge(type='text', name='shopName', placeholder="#{ __('shop-name') }", required, data-validation-required-message="#{ __('shop-name-required') }", value='#{ shop.name }')
              p.help-block

          .control-group
            label.control-label(for='description') #{ __('Description') }
            .controls
              textarea(rows='3', placeholder="#{ __('Description') }", name='description')=shop.description

          .control-group
            label.control-label(for='address') #{ __('Address') }
            .controls
              input.input-xlarge(type='text', name='address', placeholder="#{ __('Address') }", value='#{ shop.address ? shop.address : '' }')

          .control-group
            label.control-label(for='phoneNumber') #{ __('phone-number') }
            .controls
              input.input-xlarge(type='text', name='phoneNumber', placeholder="#{ __('phone-number') }", data-validation-regex-regex='[0-9]+', data-validation-regex-message="#{ __('invalid-phone-num') }", value='#{ shop.phoneNumber ? shop.phoneNumber : '' }')

          .control-group
            label.control-label(for='openingHours') #{ __('opening-hour') }
            .controls
              input.input-xlarge(type='text', name='openingHours', placeHolder="#{ __('Format') }: 09:00 - 21:30", data-validation-regex-regex="([01][0-9]|2[0-3]):[0-5][0-9] - ([01][0-9]|2[0-3]):[0-5][0-9]", data-validation-regex-message="#{ __('wrong-time-format') }", value='#{ shop.openingHours ? shop.openingHours : '' }')

          .control-group
            label.control-label(for='payOptions') #{ __('payment-options') }
            .controls
              table
                tr
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('Cash') !== -1
                        input(type='checkbox', value="Cash", name='payOptions', checked='checked', data-validation-minchecked-minchecked='1', data-validation-minchecked-message="#{ __('need-one-pay-opt') }") 
                        | #{ __('現金') }
                      else
                        input(type='checkbox', value="Cash", name='payOptions', data-validation-minchecked-minchecked='1', data-validation-minchecked-message="#{ __('need-one-pay-opt') }") 
                        | #{ __('現金') }
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('UnionPay') !== -1
                        input(type='checkbox', value="UnionPay", name='payOptions', checked='checked')
                        | #{ __('銀聯') }
                      else
                        input(type='checkbox', value="UnionPay", name='payOptions')
                        | #{ __('銀聯') }
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('VISA') !== -1
                        input(type='checkbox', value="VISA", name='payOptions', checked='checked')
                        | #{ __('VISA') }
                      else
                        input(type='checkbox', value="VISA", name='payOptions')
                        | #{ __('VISA') }

                tr
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('Master') !== -1
                        input(type='checkbox', value="Master", name='payOptions', checked='checked')
                        | #{ __('Master') }
                      else
                        input(type='checkbox', value="Master", name='payOptions')
                        | #{ __('Master') }
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('JCB') !== -1
                        input(type='checkbox', value="JCB", name='payOptions', checked='checked')
                        | #{ __('JCB') }
                      else
                        input(type='checkbox', value="JCB", name='payOptions')
                        | #{ __('JCB') }
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('AMEX') !== -1
                        input(type='checkbox', value="AMEX", name='payOptions', checked='checked')
                        | #{ __('AMEX') }
                      else
                        input(type='checkbox', value="AMEX", name='payOptions')
                        | #{ __('AMEX') }
                tr
                  td
                    label.checkbox.checkbox-label
                      if shop.paymentOpts && shop.paymentOpts.indexOf('Other') !== -1
                        input(type='checkbox', value="Other", name='payOptions', checked='checked')
                        | #{ __('Other') }
                      else
                        input(type='checkbox', value="Other", name='payOptions')
                        | #{ __('Other') }

          .control-group
            label.control-label(for='wifi') #{ __('Wifi') }
            .controls
              table
                tr
                  td
                    label.radio.radio-label
                      input(type='radio', name='wifi', value='yes', checked='#{ shop.wifi ? 'checked' : '' }')
                      | Yes
                  td
                    label.radio.radio-label
                      input(type='radio', name='wifi', value='no', checkd='#{ shop.wifi ? 'checked' : '' }')
                      | No

          .control-group
            label.control-label(for='languages') #{ __('Languages') }
            .controls
              table
                tr
                  td
                    label.checkbox.checkbox-label
                      if shop.languages && shop.languages.indexOf('Japanese') !== -1
                        input(type='checkbox', value='Japanese', name='languages', checked='checked', data-validation-minchecked-minchecked='1', data-validation-minchecked-message="#{ __('need-one-lang') }")
                        | #{ __('Japanese') }
                      else
                        input(type='checkbox', value='Japanese', name='languages', data-validation-minchecked-minchecked='1', data-validation-minchecked-message="#{ __('need-one-lang') }")
                        | #{ __('Japanese') }
                  td
                    label.checkbox.checkbox-label
                      if shop.languages && shop.languages.indexOf('Chinese') !== -1
                        input(type='checkbox', value='Chinese', name='languages', checked='checked')
                        | #{ __('Chinese') }
                      else
                        input(type='checkbox', value='Chinese', name='languages')
                        | #{ __('Chinese') }
                  td
                    label.checkbox.checkbox-label
                      if shop.languages && shop.languages.indexOf('English') !== -1
                        input(type='checkbox', value='English', name='languages', checked='checked')
                        | #{ __('English') }
                      else 
                        input(type='checkbox', value='English', name='languages')
                        | #{ __('English') }
                tr
                  td
                    label.checkbox.checkbox-label
                      if shop.languages && shop.languages.indexOf('Korean') !== -1
                        input(type='checkbox', value='Korean', name='languages', checked='checked')
                        | #{ __('Korean') }
                      else
                        input(type='checkbox', value='Korean', name='languages')
                        | #{ __('Korean') }
                  td
                    label.checkbox.checkbox-label
                      if shop.languages && shop.languages.indexOf('Other') !== -1
                        input(type='checkbox', value='Other', name='languages', checked='checked')
                        | #{ __('Other') }
                      else
                        input(type='checkbox', value='Other', name='languages')
                        | #{ __('Other') }

          .control-groups
            label.control-label(for='station') #{ __('near-station') }
            .controls.stations
              - for (i = 0; i < 3; i++)
                if (shop.nearStations[i] && shop.nearStations[i].length > 0)
                  input(type='text', name='stations', placeholder="#{ __('Station') + ' ' + (i + 1) }", value="#{ shop.nearStations[i] }")
                else
                  input(type='text', name='stations', placeholder="#{ __('Station') + ' ' + (i + 1) }")

          .control-groups
            label.control-label(for='customFieldss') #{ __('custom-fields') }
            .controls.custom-fields
              table
                - for (i = 0; i < 5; i++)
                  if (shop.customFields[i])
                    tr
                      td
                        input.input-small(type='text', name='customFields[#{i}]', placeholder="#{ __('custom-field') + ' ' + (i + 1) }", value='#{ shop.customFields[i].name }')
                      td
                        input(type='text', name='customFields[#{i}]', placeholder="#{ __('custom-field-value') + ' ' + (i + 1 ) }", value='#{ shop.customFields[i].value }')
                  else
                    tr
                      td
                        input.input-small(type='text', name='customFields[#{i}]', placeholder="#{ __('custom-field') + ' ' + (i + 1) }")
                      td
                        input(type='text', name='customFields[#{i}]', placeholder="#{ __('custom-field-value') + ' ' + (i + 1 ) }")
        fieldset
          legend.map-legend #{ __('set-location') }
          .map-edit-shop
            input.input-xlarge(type='text', autocomplete='off')#edit-addresspicker
            p.help-block
              em #{ __('how-to-use-map') }
            #map-div(style='width: 500px; height: 300px; margin-top: 20px')
              #map_canvas(style='width:100%; height:100%')


        fieldset
          .control-group
            .controls
              button.btn.btn-large.btn-primary(type='submit') #{ __('Save') }
              input#long(type='hidden', name='long', value='#{ shop.location.coords[0] ? shop.location.coords[0] : '' }')
              input#lat(type='hidden', name='lat', value='#{ shop.location.coords[1] ? shop.location.coords[1] : '' }')
              input#geo-address(type='hidden', name='geoAddress')
              input(type='hidden', name='_csrf', value=token)


prepend scripts
  script(src='https://maps.googleapis.com/maps/api/js?sensor=false')
append scripts
  script(src='/components/jquery-addresspicker/lib/bootstrap-typeahead.min.js')
  script(src='/components/jquery-addresspicker/src/jquery.addresspicker.js')
